############################################################
# Environment Example — CoupleBudget (API + Frontend)
#
# Copy to .env and adjust values for your setup.
# This file populates:
# - API process env (via api/env.ts)
# - Frontend config (via scripts/gen-config.mjs → src/assets/config.js)
############################################################

########################
# API (Node + Postgres)
########################

# HTTP port for the API server
PORT=3333

# JWT secret to sign/verify HS256 tokens (Auth)
# NOTE: Use a strong secret in production
AUTH_JWT_SECRET=c0upl3-Budg3t!@*

# Postgres connection string (enable persistence)
# For Docker Compose default:
# postgresql://couple:couple@localhost:5432/couple_budget
SUPABASE_DB_URL=postgresql://couple:couple@localhost:5432/couple_budget

## Optional: Local Postgres container variables (used by docker-compose)
DB_NAME=couple_budget
DB_USER=couple
DB_PASSWORD=couple
DB_PORT=5432

########################
# Frontend integration
########################

# When true, the UI calls the API instead of using in-memory state.
# Accepts: true|false or 1|0
USE_API=true

# Base URL of the API the frontend will call
API_URL=http://localhost:3333

## No frontend auth settings required — the app uses backend /auth endpoints

########################
# Developer experience
########################

# When true, surfaces extra details in UI toasts/logs
# Accepts: true|false or 1|0
DEBUG=false
