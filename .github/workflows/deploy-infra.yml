name: Deploy Infrastructure

on:
  workflow_dispatch:
    inputs:
      hostedZoneId:
        description: 'Route 53 Hosted Zone ID'
        required: true
        default: 'Z05678082RBZES6D13RG3'
      projectName:
        description: 'Project Name'
        required: true
        default: 'angular-node-app'

jobs:
  deploy:
    runs-on: ubuntu-latest
    # As permissões são necessárias para a action de 'configure-aws-credentials'
    permissions:
      id-token: write # Required for OIDC
      contents: read

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Deploy Certificates (Global - us-east-1)
        uses: ./.github/actions/deploy-cfn-stack
        with:
          stack-name: ${{ github.event.inputs.projectName }}-certificates-global
          template-file: infra/certificates-global.yaml
          parameters: "HostedZoneId=${{ github.event.inputs.hostedZoneId }},ProjectName=${{ github.event.inputs.projectName }}"
          aws-region: us-east-1
          capabilities: CAPABILITY_IAM

      - name: Deploy Certificates (Regional - eu-central-1)
        uses: ./.github/actions/deploy-cfn-stack
        with:
          stack-name: ${{ github.event.inputs.projectName }}-certificates-regional
          template-file: infra/certificates-regional.yaml
          parameters: "HostedZoneId=${{ github.event.inputs.hostedZoneId }},ProjectName=${{ github.event.inputs.projectName }}"
          aws-region: eu-central-1
          capabilities: CAPABILITY_IAM

      - name: Deploy Network Stack
        uses: ./.github/actions/deploy-cfn-stack
        with:
          stack-name: ${{ github.event.inputs.projectName }}-network
          template-file: infra/network.yaml
          parameters: "ProjectName=${{ github.event.inputs.projectName }}"

      - name: Deploy RDS Stack
        uses: ./.github/actions/deploy-cfn-stack
        with:
          stack-name: ${{ github.event.inputs.projectName }}-rds
          template-file: infra/rds-postgress.yaml
          parameters: "ProjectName=${{ github.event.inputs.projectName }}"

      - name: Deploy Backend Stack
        uses: ./.github/actions/deploy-cfn-stack
        with:
          stack-name: ${{ github.event.inputs.projectName }}-backend
          template-file: infra/backend-fargate.yaml
          parameters: "ProjectName=${{ github.event.inputs.projectName }}" # O ARN do certificado será importado via Fn::ImportValue

      - name: Deploy Frontend Stack
        uses: ./.github/actions/deploy-cfn-stack
        with:
          stack-name: ${{ github.event.inputs.projectName }}-frontend
          template-file: infra/frontend-s3-cloudfront.yaml
          parameters: "ProjectName=${{ github.event.inputs.projectName }}" # O ARN do certificado será importado via Fn::ImportValue

      - name: Deploy DNS Stack
        uses: ./.github/actions/deploy-cfn-stack
        with:
          stack-name: ${{ github.event.inputs.projectName }}-dns
          template-file: infra/dns.yaml
          parameters: "HostedZoneId=${{ github.event.inputs.hostedZoneId }},ProjectName=${{ github.event.inputs.projectName }}"
